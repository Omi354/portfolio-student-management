openapi: 3.0.1
info:
  title: 受講生管理システム
  description: 受講生情報を管理するためのシステムです。主に受講生の個人情報と受講しているコース情報の管理、操作を行います
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /students:
    get:
      tags:
        - student-controller
      summary: 受講生詳細の検索
      description: 受講生詳細の一覧を検索します。クエリパラメータ `status` を指定しない場合、全件検索を行います。クエリパラメータ `status`
        を指定すると、そのステータスに該当する受講生詳細を検索します。クエリパラメーターとしてStudentフィールドの項目を指定すると、条件に該当する受講生詳細を検索します。`status`の指定と、Studentフィールドの項目を同時に指定することは出来ません。
      operationId: getStudentList
      parameters:
        - name: status
          in: query
          description: "申込状況のステータス（例: \"仮申込\", \"本申込\", \"受講中\", \"受講終了\"）。指定しない場合、全\
          件を返します。"
          required: false
          schema:
            type: string
            enum:
              - 仮申込
              - 本申込
              - 受講中
              - 受講終了
        - name: fullName
          in: query
          description: 受講生氏名。部分一致で検索可能。
          required: false
          schema:
            type: string
        - name: kana
          in: query
          description: 受講生フリガナ。部分一致で検索可能。
          required: false
          schema:
            type: string
        - name: nickName
          in: query
          description: 受講生ニックネーム。部分一致で検索可能。
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: 受講生メールアドレス。部分一致で検索可能。
          required: false
          schema:
            type: string
        - name: city
          in: query
          description: 受講生居住地域。部分一致で検索可能。
          required: false
          schema:
            type: string
        - name: minAge
          in: query
          description: 検索対象の最小年齢。0以上の整数を指定します。
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: maxAge
          in: query
          description: 検索対象の最大年齢。0以上の整数を指定します。
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: gender
          in: query
          description: "受講生性別（例: \"Male\", \"Female\", \"NON_BINARY\", \"Unspecified\"\
          ）"
          required: false
          schema:
            type: string
            enum:
              - Male
              - Female
              - NON_BINARY
              - Unspecified
        - name: remark
          in: query
          description: 受講生備考。部分一致で検索可能。
          required: false
          schema:
            type: string
      responses:
        "200":
          description: 検索結果としての受講生詳細のリスト
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentDetail"
        "400":
          description: |-
            不正なクエリパラメータ。以下のケースが考えられます:
            1. `status`と他の検索条件が同時に指定されている
            2. `minAge`と`maxAge`の範囲が逆転している、または負の値が指定されている
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - student-controller
      summary: 受講生更新
      description: 受講生の情報を更新します。指定した受講生情報や受講生コース情報が存在しない場合、エラーを発生させます。
      operationId: updateStudent
      requestBody:
        description: 更新したい受講生詳細※受講生コース情報にネストされている申込状況については指定できません、別途"/enrollment-status"を使用して更新します
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentDetail"
        required: true
      responses:
        "200":
          description: ok
          content:
            text/plain;charset=UTF-8:
              schema:
                type: string
                example: 更新に成功しました
        "400":
          description: リクエストボディのバリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 指定されたIDの受講生または受講生コース情報が存在しない場合のエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - student-controller
      summary: 受講生登録
      description: 受講生を登録します
      operationId: registerStudent
      requestBody:
        description: "新規登録したい受講生詳細　※受講生のid,remark,isDeleted、受講生コース情報のid,studentId,startDate,endDate、\
          申込状況のid,studentCourseId,cratedAtは自動付与されるためリクエストボディに含まれません"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentDetail"
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentDetail"
        "400":
          description: リクエストボディのバリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /students/courses/enrollment-status:
    post:
      tags:
        - student-controller
      summary: 申込状況更新
      description: 申込状況を更新します。実際には同じ受講生コース情報に紐づく申込状況を作成し、過去の申込状況をDB上に保持できるようにしています。
      operationId: updateEnrollmentStatus
      requestBody:
        description: "更新したい申込状況　※id, createdAt は自動付与されるためリクエストボディに含まれません"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnrollmentStatus"
        required: true
      responses:
        "200":
          description: ok
          content:
            text/plain;charset=UTF-8:
              schema:
                type: string
                example: 更新に成功しました
        "400":
          description: 申込状況のステータスが後ろに戻るようなリクエストの場合に発生する例外処理
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: リクエストの申込状況オブジェクトが受講生コースと正しく紐づいていない場合の例外処理
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /students/{id}:
    get:
      tags:
        - student-controller
      summary: 受講生検索
      description: パスで指定されたIDに該当する受講生を検索します。IDに紐づく受講生が存在しない場合エラーを発生させます。
      operationId: getStudent
      parameters:
        - name: id
          in: path
          description: 受講生ID
          required: true
          schema:
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            type: string
            description: 自動生成されたUUID
            format: uuid
            example: 5998fd5d-a2cd-11ef-b71f-6845f15f510c
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentDetail"
        "404":
          description: 指定されたIDの受講生が存在しない場合のエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: UUIDの形式が誤っていた際のバリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    EnrollmentStatus:
      required:
        - status
      type: object
      properties:
        id:
          type: string
          description: ID
          example: e05baab7-a353-4b00-a7ed-5d47bd12eb65
        studentCourseId:
          type: string
          description: 受講生コースID、外部キー
          example: 78af6312-a2cd-11ef-b71f-6845f15f510c
        status:
          type: string
          description: 申込状況
          example: 受講中
          enum:
            - 仮申込
            - 本申込
            - 受講中
            - 受講終了
        createdAt:
          type: string
          description: レコード作成日
          format: date-time
      description: 申込状況
    Student:
      required:
        - city
        - email
        - fullName
      type: object
      properties:
        id:
          type: string
          description: ID、UUIDを自動付与
          example: 5998fd5d-a2cd-11ef-b71f-6845f15f510c
        fullName:
          type: string
          description: 氏名
          example: 山田 太郎
        kana:
          pattern: "^$|^[ァ-ヶー\\s　]+$"
          type: string
          description: フリガナ、カタカナと半角・全角スペースのみ許可
          example: ヤマダ　タロウ
        nickName:
          type: string
          description: ニックネーム
          example: たろ
        email:
          type: string
          description: メールアドレス
          example: yamada@example.com
        city:
          type: string
          description: 居住地域、都道府県＋市区町村までを想定
          example: 東京都港区
        age:
          type: integer
          description: 年齢、0~150までを許可
          format: int32
          example: 32
        gender:
          type: string
          description: 性別
          example: Male
          enum:
            - Male
            - Female
            - NON_BINARY
            - Unspecified
        remark:
          type: string
          description: 備考
          example: 入院のため利用休止中
        isDeleted:
          type: boolean
          description: 削除フラグ
          example: false
      description: 受講生
    StudentCourse:
      required:
        - courseName
      type: object
      properties:
        id:
          type: string
          description: ID、UUIDを自動付与
          example: 78af6312-a2cd-11ef-b71f-6845f15f510c
        studentId:
          type: string
          description: 受講生ID、外部キー
          example: 5998fd5d-a2cd-11ef-b71f-6845f15f510c
        courseName:
          type: string
          description: 受講コース名
          example: Javaフルコース
        startDate:
          type: string
          description: 受講開始日
          format: date-time
        endDate:
          type: string
          description: 受講修了予定日
          format: date-time
        enrollmentStatus:
          $ref: "#/components/schemas/EnrollmentStatus"
      description: 受講生コース情報
    StudentDetail:
      type: object
      properties:
        student:
          $ref: "#/components/schemas/Student"
        studentCourseList:
          type: array
          items:
            $ref: "#/components/schemas/StudentCourse"
      description: 受講生詳細
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: エラーの種類
          example: error occurred
        message:
          type: string
          description: エラー詳細メッセージ
          example: エラーが発生しました
      description: エラーレスポンスモデル
