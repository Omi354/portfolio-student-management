<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="portfolio.StudentManagement.repository.StudentCourseRepository">


  <resultMap id="StudentCourseResultMap" type="portfolio.StudentManagement.data.StudentCourse">
    <!-- StudentCourseの基本プロパティ -->
    <id property="id" column="id"/>
    <result property="studentId" column="student_id"/>
    <result property="courseName" column="course_name"/>
    <result property="startDate" column="start_date"/>
    <result property="endDate" column="end_date"/>

    <!-- EnrollmentStatusのネスト -->
    <association property="enrollmentStatus">
      <id property="id" column="enrollment_status_id"/>
      <result property="studentCourseId" column="student_course_id"/>
      <result property="status" column="status"/>
      <result property="createdAt" column="created_at"/>
    </association>
  </resultMap>

  <!-- 受講生コース情報の全件検索 -->
  <select id="selectAllCourseList" resultMap="StudentCourseResultMap">
    WITH RankedStatuses AS (
    SELECT
    e.id AS enrollment_status_id,
    e.student_course_id,
    e.status,
    e.created_at,
    ROW_NUMBER() OVER (PARTITION BY e.student_course_id ORDER BY e.created_at DESC) AS rn
    FROM enrollment_statuses e
    )
    SELECT
    s.id AS id,
    s.student_id,
    s.course_name,
    s.start_date,
    s.end_date,
    r.enrollment_status_id,
    r.student_course_id,
    r.status,
    r.created_at
    FROM students_courses s
    INNER JOIN RankedStatuses r
    ON s.id = r.student_course_id
    WHERE r.rn = 1;

  </select>


  <!-- 受講生コース情報の検索 -->
  <select id="selectCourseListByStudentId" parameterType="String"
    resultMap="StudentCourseResultMap">
    WITH RankedStatuses AS (
    SELECT
    e.id AS enrollment_status_id,
    e.student_course_id,
    e.status,
    e.created_at,
    ROW_NUMBER() OVER (PARTITION BY e.student_course_id ORDER BY e.created_at DESC) AS rn
    FROM enrollment_statuses e
    )
    SELECT
    s.id AS id,
    s.student_id,
    s.course_name,
    s.start_date,
    s.end_date,
    r.enrollment_status_id,
    r.student_course_id,
    r.status,
    r.created_at
    FROM students_courses s
    INNER JOIN RankedStatuses r
    ON s.id = r.student_course_id
    WHERE r.rn = 1 AND student_id = #{studentId}
    ;
  </select>


  <!-- 受講生コース情報の新規登録 -->
  <insert id="createStudentCourse" parameterType="portfolio.StudentManagement.data.StudentCourse">
    INSERT INTO students_courses (id, student_id, course_name, start_date, end_date)
    VALUES (#{id}, #{studentId}, #{courseName}, #{startDate}, #{endDate} )
  </insert>

  <!-- 受講生コース情報の更新 -->
  <insert id="updateStudentCourse" parameterType="portfolio.StudentManagement.data.StudentCourse">
    UPDATE students_courses SET
    course_name = #{courseName},
    start_date = #{startDate},
    end_date = #{endDate}
    WHERE id = #{id}
  </insert>

</mapper>